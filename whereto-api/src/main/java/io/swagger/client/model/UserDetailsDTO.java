/*
 * WhereTo API
 * WhereTo API documentation
 *
 * OpenAPI spec version: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.InteresDTO;
import io.swagger.client.model.UserDetailsDTO;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * UserDetailsDTO
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-05-11T13:57:16.194+02:00[Europe/Ljubljana]")public class UserDetailsDTO {

  @SerializedName("folowers")
  private List<UserDetailsDTO> folowers = null;

  @SerializedName("friends")
  private List<UserDetailsDTO> friends = null;

  @SerializedName("id")
  private Long id = null;

  @SerializedName("image")
  private String image = null;

  @SerializedName("imageContentType")
  private String imageContentType = null;

  @SerializedName("interests")
  private List<InteresDTO> interests = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("userId")
  private Long userId = null;

  @SerializedName("userLogin")
  private String userLogin = null;
  public UserDetailsDTO folowers(List<UserDetailsDTO> folowers) {
    this.folowers = folowers;
    return this;
  }

  public UserDetailsDTO addFolowersItem(UserDetailsDTO folowersItem) {
    if (this.folowers == null) {
      this.folowers = new ArrayList<UserDetailsDTO>();
    }
    this.folowers.add(folowersItem);
    return this;
  }

  /**
  * Get folowers
  * @return folowers
  **/
  @Schema(description = "")
  public List<UserDetailsDTO> getFolowers() {
    return folowers;
  }
  public void setFolowers(List<UserDetailsDTO> folowers) {
    this.folowers = folowers;
  }
  public UserDetailsDTO friends(List<UserDetailsDTO> friends) {
    this.friends = friends;
    return this;
  }

  public UserDetailsDTO addFriendsItem(UserDetailsDTO friendsItem) {
    if (this.friends == null) {
      this.friends = new ArrayList<UserDetailsDTO>();
    }
    this.friends.add(friendsItem);
    return this;
  }

  /**
  * Get friends
  * @return friends
  **/
  @Schema(description = "")
  public List<UserDetailsDTO> getFriends() {
    return friends;
  }
  public void setFriends(List<UserDetailsDTO> friends) {
    this.friends = friends;
  }
  public UserDetailsDTO id(Long id) {
    this.id = id;
    return this;
  }

  

  /**
  * Get id
  * @return id
  **/
  @Schema(description = "")
  public Long getId() {
    return id;
  }
  public void setId(Long id) {
    this.id = id;
  }
  public UserDetailsDTO image(String image) {
    this.image = image;
    return this;
  }

  

  /**
  * Get image
  * @return image
  **/
  @Schema(description = "")
  public String getImage() {
    return image;
  }
  public void setImage(String image) {
    this.image = image;
  }
  public UserDetailsDTO imageContentType(String imageContentType) {
    this.imageContentType = imageContentType;
    return this;
  }

  

  /**
  * Get imageContentType
  * @return imageContentType
  **/
  @Schema(description = "")
  public String getImageContentType() {
    return imageContentType;
  }
  public void setImageContentType(String imageContentType) {
    this.imageContentType = imageContentType;
  }
  public UserDetailsDTO interests(List<InteresDTO> interests) {
    this.interests = interests;
    return this;
  }

  public UserDetailsDTO addInterestsItem(InteresDTO interestsItem) {
    if (this.interests == null) {
      this.interests = new ArrayList<InteresDTO>();
    }
    this.interests.add(interestsItem);
    return this;
  }

  /**
  * Get interests
  * @return interests
  **/
  @Schema(description = "")
  public List<InteresDTO> getInterests() {
    return interests;
  }
  public void setInterests(List<InteresDTO> interests) {
    this.interests = interests;
  }
  public UserDetailsDTO name(String name) {
    this.name = name;
    return this;
  }

  

  /**
  * Get name
  * @return name
  **/
  @Schema(required = true, description = "")
  public String getName() {
    return name;
  }
  public void setName(String name) {
    this.name = name;
  }
  public UserDetailsDTO userId(Long userId) {
    this.userId = userId;
    return this;
  }

  

  /**
  * Get userId
  * @return userId
  **/
  @Schema(description = "")
  public Long getUserId() {
    return userId;
  }
  public void setUserId(Long userId) {
    this.userId = userId;
  }
  public UserDetailsDTO userLogin(String userLogin) {
    this.userLogin = userLogin;
    return this;
  }

  

  /**
  * Get userLogin
  * @return userLogin
  **/
  @Schema(description = "")
  public String getUserLogin() {
    return userLogin;
  }
  public void setUserLogin(String userLogin) {
    this.userLogin = userLogin;
  }
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserDetailsDTO userDetailsDTO = (UserDetailsDTO) o;
    return Objects.equals(this.folowers, userDetailsDTO.folowers) &&
        Objects.equals(this.friends, userDetailsDTO.friends) &&
        Objects.equals(this.id, userDetailsDTO.id) &&
        Objects.equals(this.image, userDetailsDTO.image) &&
        Objects.equals(this.imageContentType, userDetailsDTO.imageContentType) &&
        Objects.equals(this.interests, userDetailsDTO.interests) &&
        Objects.equals(this.name, userDetailsDTO.name) &&
        Objects.equals(this.userId, userDetailsDTO.userId) &&
        Objects.equals(this.userLogin, userDetailsDTO.userLogin);
  }

  @Override
  public int hashCode() {
    return java.util.Objects.hash(folowers, friends, id, image, imageContentType, interests, name, userId, userLogin);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserDetailsDTO {\n");
    
    sb.append("    folowers: ").append(toIndentedString(folowers)).append("\n");
    sb.append("    friends: ").append(toIndentedString(friends)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    image: ").append(toIndentedString(image)).append("\n");
    sb.append("    imageContentType: ").append(toIndentedString(imageContentType)).append("\n");
    sb.append("    interests: ").append(toIndentedString(interests)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    userLogin: ").append(toIndentedString(userLogin)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
