/*
 * Locations API
 * This document describes the Kiwi.com locations search API.  **Locations** is a simple API used to search, suggest and resolve locations in various situations.  ## Contact us In case you cannot find what you are looking for in this document please contact us directly at **[tequila-support@kiwi.com](mailto:tequila-support@kiwi.com)**.  **The responses are G-zipped and need to be unpacked (response header Content-Encoding: gzip).**
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.LocationsInnerCity;
import io.swagger.client.model.LocationsInnerLocation;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * LocationsInner
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-05-10T23:04:34.003+02:00[Europe/Ljubljana]")public class LocationsInner {

  @SerializedName("id")
  private String id = null;

  @SerializedName("int_id")
  private String intId = null;

  @SerializedName("active")
  private Boolean active = null;

  @SerializedName("code")
  private String code = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("slug")
  private String slug = null;

  @SerializedName("alternative_names")
  private List<String> alternativeNames = null;

  @SerializedName("rank")
  private String rank = null;

  @SerializedName("timezone")
  private String timezone = null;

  @SerializedName("city")
  private LocationsInnerCity city = null;

  @SerializedName("location")
  private LocationsInnerLocation location = null;

  @SerializedName("alternative_departure_points")
  private List<String> alternativeDeparturePoints = null;

  @SerializedName("type")
  private String type = null;
  public LocationsInner id(String id) {
    this.id = id;
    return this;
  }

  

  /**
  * Get id
  * @return id
  **/
  @Schema(example = "LCY", description = "")
  public String getId() {
    return id;
  }
  public void setId(String id) {
    this.id = id;
  }
  public LocationsInner intId(String intId) {
    this.intId = intId;
    return this;
  }

  

  /**
  * Get intId
  * @return intId
  **/
  @Schema(example = "9625", description = "")
  public String getIntId() {
    return intId;
  }
  public void setIntId(String intId) {
    this.intId = intId;
  }
  public LocationsInner active(Boolean active) {
    this.active = active;
    return this;
  }

  

  /**
  * Get active
  * @return active
  **/
  @Schema(example = "true", description = "")
  public Boolean isActive() {
    return active;
  }
  public void setActive(Boolean active) {
    this.active = active;
  }
  public LocationsInner code(String code) {
    this.code = code;
    return this;
  }

  

  /**
  * Get code
  * @return code
  **/
  @Schema(example = "LCY", description = "")
  public String getCode() {
    return code;
  }
  public void setCode(String code) {
    this.code = code;
  }
  public LocationsInner name(String name) {
    this.name = name;
    return this;
  }

  

  /**
  * Get name
  * @return name
  **/
  @Schema(example = "London City Airport", description = "")
  public String getName() {
    return name;
  }
  public void setName(String name) {
    this.name = name;
  }
  public LocationsInner slug(String slug) {
    this.slug = slug;
    return this;
  }

  

  /**
  * Get slug
  * @return slug
  **/
  @Schema(example = "london-city-airport", description = "")
  public String getSlug() {
    return slug;
  }
  public void setSlug(String slug) {
    this.slug = slug;
  }
  public LocationsInner alternativeNames(List<String> alternativeNames) {
    this.alternativeNames = alternativeNames;
    return this;
  }

  public LocationsInner addAlternativeNamesItem(String alternativeNamesItem) {
    if (this.alternativeNames == null) {
      this.alternativeNames = new ArrayList<String>();
    }
    this.alternativeNames.add(alternativeNamesItem);
    return this;
  }

  /**
  * Get alternativeNames
  * @return alternativeNames
  **/
  @Schema(example = "[]", description = "")
  public List<String> getAlternativeNames() {
    return alternativeNames;
  }
  public void setAlternativeNames(List<String> alternativeNames) {
    this.alternativeNames = alternativeNames;
  }
  public LocationsInner rank(String rank) {
    this.rank = rank;
    return this;
  }

  

  /**
  * Get rank
  * @return rank
  **/
  @Schema(example = "0", description = "")
  public String getRank() {
    return rank;
  }
  public void setRank(String rank) {
    this.rank = rank;
  }
  public LocationsInner timezone(String timezone) {
    this.timezone = timezone;
    return this;
  }

  

  /**
  * Get timezone
  * @return timezone
  **/
  @Schema(example = "Europe/London", description = "")
  public String getTimezone() {
    return timezone;
  }
  public void setTimezone(String timezone) {
    this.timezone = timezone;
  }
  public LocationsInner city(LocationsInnerCity city) {
    this.city = city;
    return this;
  }

  

  /**
  * Get city
  * @return city
  **/
  @Schema(description = "")
  public LocationsInnerCity getCity() {
    return city;
  }
  public void setCity(LocationsInnerCity city) {
    this.city = city;
  }
  public LocationsInner location(LocationsInnerLocation location) {
    this.location = location;
    return this;
  }

  

  /**
  * Get location
  * @return location
  **/
  @Schema(description = "")
  public LocationsInnerLocation getLocation() {
    return location;
  }
  public void setLocation(LocationsInnerLocation location) {
    this.location = location;
  }
  public LocationsInner alternativeDeparturePoints(List<String> alternativeDeparturePoints) {
    this.alternativeDeparturePoints = alternativeDeparturePoints;
    return this;
  }

  public LocationsInner addAlternativeDeparturePointsItem(String alternativeDeparturePointsItem) {
    if (this.alternativeDeparturePoints == null) {
      this.alternativeDeparturePoints = new ArrayList<String>();
    }
    this.alternativeDeparturePoints.add(alternativeDeparturePointsItem);
    return this;
  }

  /**
  * Get alternativeDeparturePoints
  * @return alternativeDeparturePoints
  **/
  @Schema(example = "[\"id: LHR\",\"distance: 35.8\",\"duration: 1.4\"]", description = "")
  public List<String> getAlternativeDeparturePoints() {
    return alternativeDeparturePoints;
  }
  public void setAlternativeDeparturePoints(List<String> alternativeDeparturePoints) {
    this.alternativeDeparturePoints = alternativeDeparturePoints;
  }
  public LocationsInner type(String type) {
    this.type = type;
    return this;
  }

  

  /**
  * Get type
  * @return type
  **/
  @Schema(example = "airport", description = "")
  public String getType() {
    return type;
  }
  public void setType(String type) {
    this.type = type;
  }
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LocationsInner locationsInner = (LocationsInner) o;
    return Objects.equals(this.id, locationsInner.id) &&
        Objects.equals(this.intId, locationsInner.intId) &&
        Objects.equals(this.active, locationsInner.active) &&
        Objects.equals(this.code, locationsInner.code) &&
        Objects.equals(this.name, locationsInner.name) &&
        Objects.equals(this.slug, locationsInner.slug) &&
        Objects.equals(this.alternativeNames, locationsInner.alternativeNames) &&
        Objects.equals(this.rank, locationsInner.rank) &&
        Objects.equals(this.timezone, locationsInner.timezone) &&
        Objects.equals(this.city, locationsInner.city) &&
        Objects.equals(this.location, locationsInner.location) &&
        Objects.equals(this.alternativeDeparturePoints, locationsInner.alternativeDeparturePoints) &&
        Objects.equals(this.type, locationsInner.type);
  }

  @Override
  public int hashCode() {
    return java.util.Objects.hash(id, intId, active, code, name, slug, alternativeNames, rank, timezone, city, location, alternativeDeparturePoints, type);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LocationsInner {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    intId: ").append(toIndentedString(intId)).append("\n");
    sb.append("    active: ").append(toIndentedString(active)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    slug: ").append(toIndentedString(slug)).append("\n");
    sb.append("    alternativeNames: ").append(toIndentedString(alternativeNames)).append("\n");
    sb.append("    rank: ").append(toIndentedString(rank)).append("\n");
    sb.append("    timezone: ").append(toIndentedString(timezone)).append("\n");
    sb.append("    city: ").append(toIndentedString(city)).append("\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("    alternativeDeparturePoints: ").append(toIndentedString(alternativeDeparturePoints)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
